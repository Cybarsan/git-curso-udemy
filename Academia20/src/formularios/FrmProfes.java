/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import entidades.Alumnos;
import entidades.Profesores;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC_Toshiba15
 */
public class FrmProfes extends javax.swing.JDialog {

    private EntityManagerFactory emf;
    private EntityManager em;
    private DefaultTableModel modelProfe;
    private DefaultTableModel modelParientes;
    private EntityTransaction tx;
    private Date fecnac;
    private SimpleDateFormat formatofec = new SimpleDateFormat("dd/MM/yyyy");
    private int veralumno;
    private int modifica = 0;
    private Profesores profe = null;
    

    /**
     * Creates new form FrmAlumnos
     */
    public FrmProfes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        sesion();
        inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanelParientes = new javax.swing.JTabbedPane();
        jPaneMedio = new javax.swing.JPanel();
        jLblNombre19 = new javax.swing.JLabel();
        jLblNombre2 = new javax.swing.JLabel();
        jLblNombre4 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jLblCelular = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLblCelular2 = new javax.swing.JLabel();
        jLblNombre20 = new javax.swing.JLabel();
        jLblCelular3 = new javax.swing.JLabel();
        txtCelular2 = new javax.swing.JTextField();
        txtFechaNacimiento = new utilidades.JTextFieldFecha();
        txtCelular1 = new javax.swing.JTextField();
        jPanelBotones = new javax.swing.JPanel();
        jBtnNuevo = new javax.swing.JButton();
        jBtnEditar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jBtnGuardar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jBtnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanelTitulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTitulo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitulo.setText("Profesores");

        jPanelParientes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jPanelParientes.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jPanelParientesAncestorRemoved(evt);
            }
        });
        jPanelParientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelParientesFocusGained(evt);
            }
        });

        jLblNombre19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblNombre19.setText("Cedula :");

        jLblNombre2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblNombre2.setText("Nombres :");

        jLblNombre4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblNombre4.setText("Apellidos :");

        txtCedula.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCedula.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCedulaFocusGained(evt);
            }
        });
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCedulaKeyPressed(evt);
            }
        });

        txtNombres.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNombres.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombresFocusGained(evt);
            }
        });
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombresKeyPressed(evt);
            }
        });

        txtApellidos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtApellidos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidosFocusGained(evt);
            }
        });
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtApellidosKeyPressed(evt);
            }
        });

        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "CÃ©dula", "Nombres", "Apellidos", "Fecha Nacimiento", "Edad"
            }
        ));
        jTableAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAlumnos);
        if (jTableAlumnos.getColumnModel().getColumnCount() > 0) {
            jTableAlumnos.getColumnModel().getColumn(4).setResizable(false);
            jTableAlumnos.getColumnModel().getColumn(4).setHeaderValue("Fecha Nacimiento");
            jTableAlumnos.getColumnModel().getColumn(5).setHeaderValue("Edad");
        }

        jLblCelular.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCelular.setText("Telefono:");

        txtDireccion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDireccion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionFocusLost(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        jLblEmail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblEmail.setText("Email:");

        txtEmail.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });

        jLblCelular2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCelular2.setText("Nro Cta:");

        jLblNombre20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblNombre20.setText("Fecha Nac.:");

        jLblCelular3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCelular3.setText("Celular:");

        txtCelular2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCelular2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelular2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCelular2FocusLost(evt);
            }
        });
        txtCelular2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelular2KeyPressed(evt);
            }
        });

        txtFechaNacimiento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtFechaNacimiento.setMinimumSize(new java.awt.Dimension(14, 25));
        txtFechaNacimiento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFechaNacimientoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFechaNacimientoFocusLost(evt);
            }
        });

        txtCelular1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCelular1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCelular1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCelular1FocusLost(evt);
            }
        });
        txtCelular1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelular1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPaneMedioLayout = new javax.swing.GroupLayout(jPaneMedio);
        jPaneMedio.setLayout(jPaneMedioLayout);
        jPaneMedioLayout.setHorizontalGroup(
            jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneMedioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneMedioLayout.createSequentialGroup()
                        .addComponent(jLblNombre19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLblNombre2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLblNombre4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPaneMedioLayout.createSequentialGroup()
                        .addGroup(jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPaneMedioLayout.createSequentialGroup()
                                .addComponent(jLblNombre20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(jLblEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLblCelular)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPaneMedioLayout.createSequentialGroup()
                                .addComponent(jLblCelular3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCelular2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLblCelular2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(195, 195, 195))
                            .addGroup(jPaneMedioLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPaneMedioLayout.setVerticalGroup(
            jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneMedioLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNombre19)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblNombre2)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblNombre4)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNombre20)
                    .addComponent(jLblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblCelular)
                    .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPaneMedioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblCelular2)
                    .addComponent(jLblCelular3)
                    .addComponent(txtCelular2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelParientes.addTab("Profesores", jPaneMedio);

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelParientes)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addGap(375, 375, 375)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelParientes, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        jBtnNuevo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnNuevo.setMnemonic('N');
        jBtnNuevo.setText("Nuevo");
        jBtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnNuevoActionPerformed(evt);
            }
        });

        jBtnEditar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnEditar.setMnemonic('E');
        jBtnEditar.setText("Editar");
        jBtnEditar.setPreferredSize(new java.awt.Dimension(76, 35));
        jBtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditarActionPerformed(evt);
            }
        });

        jBtnEliminar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnEliminar.setMnemonic('l');
        jBtnEliminar.setText("Eliminar");

        jBtnGuardar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnGuardar.setMnemonic('G');
        jBtnGuardar.setText("Guardar");
        jBtnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGuardarActionPerformed(evt);
            }
        });

        jBtnCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnCancelar.setMnemonic('C');
        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jBtnCerrar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBtnCerrar.setMnemonic('r');
        jBtnCerrar.setText("Cerrar");
        jBtnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesLayout = new javax.swing.GroupLayout(jPanelBotones);
        jPanelBotones.setLayout(jPanelBotonesLayout);
        jPanelBotonesLayout.setHorizontalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jBtnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jBtnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jBtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jBtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jBtnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotonesLayout.setVerticalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditarActionPerformed
        modifica = 1;
        habideshabiProfes(true);
        jBtnCancelar.setEnabled(true);
        txtCedula.grabFocus();
    }//GEN-LAST:event_jBtnEditarActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        habideshabiProfes(false);
        jBtnCancelar.setEnabled(false);
        jBtnEditar.setEnabled(false);
        jBtnEliminar.setEnabled(false);
        inicio();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jBtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnNuevoActionPerformed
        habideshabiProfes(true);
        limpiarcampos();
        jBtnNuevo.setEnabled(false);
        jBtnCancelar.setEnabled(true);
        jBtnGuardar.setEnabled(true);
        txtCedula.grabFocus();
    }//GEN-LAST:event_jBtnNuevoActionPerformed

    private void jBtnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnCerrarActionPerformed

    private void jBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGuardarActionPerformed
        if (modifica == 0) {
            grabaProfe();
        } else {
            editaProfe();
        }
        modifica = 0;
        jTableAlumnos.setEnabled(true);
        jBtnEliminar.setEnabled(false);
        jBtnGuardar.setEnabled(false);
        inicio();
    }//GEN-LAST:event_jBtnGuardarActionPerformed

    private void jPanelParientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanelParientesFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParientesFocusGained

    private void jPanelParientesAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanelParientesAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanelParientesAncestorRemoved

    private void txtFechaNacimientoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaNacimientoFocusLost
        txtEmail.grabFocus();
    }//GEN-LAST:event_txtFechaNacimientoFocusLost

    private void txtFechaNacimientoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFechaNacimientoFocusGained
        txtFechaNacimiento.selectAll();
    }//GEN-LAST:event_txtFechaNacimientoFocusGained

    private void txtCelular2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelular2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDireccion.requestFocus();
        }
    }//GEN-LAST:event_txtCelular2KeyPressed

    private void txtCelular2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelular2FocusLost
        txtDireccion.requestFocus();
    }//GEN-LAST:event_txtCelular2FocusLost

    private void txtCelular2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelular2FocusGained
        txtCelular2.selectAll();
    }//GEN-LAST:event_txtCelular2FocusGained

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCelular1.requestFocus();
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        txtCelular1.requestFocus();
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        txtEmail.selectAll();
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void txtDireccionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusLost
        txtCelular2.grabFocus();
    }//GEN-LAST:event_txtDireccionFocusLost

    private void txtDireccionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionFocusGained
        txtDireccion.selectAll();
    }//GEN-LAST:event_txtDireccionFocusGained

    private void jTableAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlumnosMouseClicked
        int fila = jTableAlumnos.getSelectedRow();

        veralumno = Integer.parseInt(jTableAlumnos.getValueAt(fila, 0).toString());

        tx = em.getTransaction();
        tx.begin();
        Profesores prof = em.find(Profesores.class, veralumno);
        profe = prof;

        txtNombres.setText(profe.getNombreProfesor().trim());
        txtApellidos.setText(profe.getApellidoProfesor().trim());
        txtCedula.setText(profe.getCedulaProfesor().trim());
        txtDireccion.setText(profe.getCelular1().trim());
        txtEmail.setText(profe.getMailProfesor().trim());
        txtCelular1.setText(profe.getCelular1().trim());
        txtCelular2.setText(profe.getCelular2().trim());
        txtDireccion.setText(profe.getNrocuenta().trim());
        String naci = null;
        if (profe.getFechaNac() != null) {
            naci = formatofec.format(profe.getFechaNac());
        }
        txtFechaNacimiento.setText(naci);
        tx.commit();
        jBtnGuardar.setEnabled(true);
    }//GEN-LAST:event_jTableAlumnosMouseClicked

    private void txtApellidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtFechaNacimiento.requestFocus();
        }
    }//GEN-LAST:event_txtApellidosKeyPressed

    private void txtApellidosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidosFocusGained
        txtApellidos.selectAll();
    }//GEN-LAST:event_txtApellidosFocusGained

    private void txtNombresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtApellidos.requestFocus();
        }
    }//GEN-LAST:event_txtNombresKeyPressed

    private void txtNombresFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombresFocusGained
        txtNombres.selectAll();
    }//GEN-LAST:event_txtNombresFocusGained

    private void txtCedulaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtNombres.requestFocus();
        }
    }//GEN-LAST:event_txtCedulaKeyPressed

    private void txtCedulaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCedulaFocusGained
        txtCedula.selectAll();
    }//GEN-LAST:event_txtCedulaFocusGained

    private void txtCelular1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelular1FocusGained
        txtCelular1.selectAll();
    }//GEN-LAST:event_txtCelular1FocusGained

    private void txtCelular1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCelular1FocusLost
        txtCelular2.requestFocus();
    }//GEN-LAST:event_txtCelular1FocusLost

    private void txtCelular1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelular1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtCelular2.requestFocus();
        }
    }//GEN-LAST:event_txtCelular1KeyPressed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProfes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProfes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProfes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProfes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmProfes dialog = new FrmProfes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnCerrar;
    private javax.swing.JButton jBtnEditar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnGuardar;
    private javax.swing.JButton jBtnNuevo;
    private javax.swing.JLabel jLblCelular;
    private javax.swing.JLabel jLblCelular2;
    private javax.swing.JLabel jLblCelular3;
    private javax.swing.JLabel jLblEmail;
    private javax.swing.JLabel jLblNombre19;
    private javax.swing.JLabel jLblNombre2;
    private javax.swing.JLabel jLblNombre20;
    private javax.swing.JLabel jLblNombre4;
    private javax.swing.JPanel jPaneMedio;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JTabbedPane jPanelParientes;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCelular1;
    private javax.swing.JTextField txtCelular2;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private utilidades.JTextFieldFecha txtFechaNacimiento;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

    private void sesion() {
        emf = Persistence.createEntityManagerFactory("Academia20PU");
        em = emf.createEntityManager();
    }

    private void inicio() {
        defaultTableModelSocio();
        cargatablaProfes();
        habideshabiProfes(false);
        //cargaParientes();
        jBtnCancelar.setEnabled(false);
        jBtnEditar.setEnabled(true);
        jBtnEliminar.setEnabled(false);
        jBtnGuardar.setEnabled(false);
        jBtnNuevo.setEnabled(true);
        jBtnNuevo.grabFocus();
        jTableAlumnos.setAutoCreateRowSorter(true);
    }

    private void habideshabiProfes(boolean b) {
        txtApellidos.setEnabled(b);
        txtCedula.setEnabled(b);
        txtNombres.setEnabled(b);
        txtEmail.setEnabled(b);
        txtDireccion.setEnabled(b);
        txtCelular1.setEnabled(b);
        txtFechaNacimiento.setEnabled(b);
        txtCelular2.setEnabled(b);
        txtDireccion.setEnabled(b);
    }

    private void limpiarcampos() {
        txtApellidos.setText(null);
        txtCedula.setText(null);
        txtNombres.setText(null);
        txtCelular1.setText(null);
        txtCelular2.setText(null);
        txtFechaNacimiento.setText(null);
        txtDireccion.setText(null);
        txtDireccion.setText(null);
        txtEmail.setText(null);
    }

    private void defaultTableModelSocio() {
        jTableAlumnos.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTableAlumnos.getColumnModel().getColumn(1).setPreferredWidth(25);
        jTableAlumnos.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTableAlumnos.getColumnModel().getColumn(3).setPreferredWidth(150);
        modelProfe = (DefaultTableModel) jTableAlumnos.getModel();
        modelProfe.setRowCount(0);
    }

    private void cargatablaProfes() {
        tx = em.getTransaction();
        tx.begin();

        List<Profesores> lista = em.createQuery("select p from Profesores p order by p.idProfesor").getResultList();

        for (Iterator<Profesores> it = lista.iterator(); it.hasNext();) {
            Profesores prof = it.next();
            String grabai = null;
            fecnac = prof.getFechaNac();
            if (fecnac != null) {
                //JOptionPane.showMessageDialog(null, fecnac);
                String diai, mesi, anioi;
                diai = String.format("%02d", (fecnac.getDate()));
                mesi = String.format("%02d", (fecnac.getMonth()) + 1);
                anioi = String.valueOf(fecnac.getYear() + 1900);
                grabai = diai + "/" + mesi + "/" + anioi;
            } else {
                fecnac = new Date();
                String diai, mesi, anioi;
                diai = String.format("%02d", (fecnac.getDate()));
                mesi = String.format("%02d", (fecnac.getMonth()) + 1);
                anioi = String.valueOf(fecnac.getYear() + 1900);
                grabai = diai + "/" + mesi + "/" + anioi;
            }

            modelProfe.addRow(new Object[]{prof.getIdProfesor(), prof.getCedulaProfesor(), prof.getNombreProfesor(), prof.getApellidoProfesor(), prof.getFechaNac()});
        }

        tx.commit();

    }

    public int edad(String fecha_nac) {     //fecha_nac debe tener el formato dd/MM/yyyy

        Date fechaActual = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        String hoy = formato.format(fechaActual);
        String[] dat1 = fecha_nac.split("/");
        String[] dat2 = hoy.split("/");
        int anos = Integer.parseInt(dat2[2]) - Integer.parseInt(dat1[2]);
        int mes = Integer.parseInt(dat2[1]) - Integer.parseInt(dat1[1]);
        if (mes < 0) {
            anos = anos - 1;
        } else if (mes == 0) {
            int dia = Integer.parseInt(dat2[0].toString()) - Integer.parseInt(dat1[0].toString());
            if (dia > 0) {
                anos = anos - 1;
            }
        }
        return anos;
    }

    private void grabaProfe() {
        em.getTransaction().begin();
        Profesores profe = new Profesores();
        profe.setNombreProfesor(txtNombres.getText().trim());
        profe.setApellidoProfesor(txtApellidos.getText().trim());
        profe.setMailProfesor(txtEmail.getText().trim());
        profe.setNrocuenta(txtDireccion.getText().trim());
        profe.setCedulaProfesor(txtCedula.getText().trim());
        profe.setCelular2(txtCelular2.getText().trim());
        profe.setActivo(1);
        Date FecNac = null;
        if (txtFechaNacimiento.getText() != "null") {

            try {
                FecNac = formatofec.parse(txtFechaNacimiento.getText());
            } catch (Exception e) {
                Logger.getLogger(FrmProfes.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        profe.setFechaNac(FecNac);

        em.persist(profe);
        em.getTransaction().commit();
        jBtnGuardar.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Guardado con Ãxito!!!");
        defaultTableModelSocio();
        cargatablaProfes();

    }

    private void editaProfe() {
        tx = em.getTransaction();
        tx.begin();

        Profesores profe = em.find(Profesores.class, veralumno);
        profe.setNombreProfesor(txtNombres.getText().trim());
        profe.setApellidoProfesor(txtApellidos.getText().trim());
        profe.setCelular1(txtCelular1.getText().trim());
        profe.setCedulaProfesor(txtCedula.getText().trim());
        
        Date FecNac = null;
        if (txtFechaNacimiento.getText() != "null") {

            try {
                FecNac = formatofec.parse(txtFechaNacimiento.getText());
            } catch (Exception e) {
                Logger.getLogger(FrmProfes.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        profe.setFechaNac(FecNac);
        profe.setMailProfesor(txtEmail.getText().trim());
        profe.setNrocuenta(txtDireccion.getText().trim());
        profe.setCelular2(txtCelular2.getText().trim());
        em.persist(profe);
        tx.commit();
        habideshabiProfes(false);
        limpiarcampos();

        jBtnEditar.setEnabled(false);
        jBtnNuevo.setEnabled(false);
        jBtnEliminar.setEnabled(false);
        jBtnNuevo.setEnabled(true);
        jBtnNuevo.grabFocus();
        cargatablaProfes();
    }
}
